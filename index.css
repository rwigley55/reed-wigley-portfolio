/* ----------------------  */
/* Custom properties       */
/* ----------------------  */

:root {
  /* colors */
  --clr-green: #14ff00;
  --clr-orange: #ffb800;
  --clr-white: #f5f3f4;
  --clr-dark-grey: #373737;
  --clr-light-grey: #484848;

  /* font-sizes */
  --fs-lrg: 2.5rem;
  --fs-med: 1.4rem;
  --fs-sm: 0.8rem;

  /* font-weight */
  --fw-400: 400;
  --fw-200: 200;
}

@media (min-width: 35em) {
  :root {
    --fs-lrg: 3.3rem;
    --fs-med: 1.5rem;
    --fs-sm: 0.85rem;
  }
}

@media (min-width: 47em) {
  :root {
    --fs-lrg: 4.7rem;
    --fs-med: 1.6rem;
    --fs-sm: 0.9rem;
  }
}

/* ----------------------  */
/* Reset                   */
/* ----------------------  */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
picture {
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
a,
div {
  font-weight: 200;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  font-family: "Dosis", sans-serif;
  font-size: var(--fs-med);
  color: var(--clr-white);
  background-color: var(--clr-dark-grey);

  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;

  display: grid;
  grid-template-rows: min-content 1fr;

  overflow-x: hidden;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

a {
  color: inherit;
  text-decoration: inherit;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* ----------------------  */
/* Utilities               */
/* ----------------------  */

/* General */
.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.d-block {
  display: block;
}

.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-space, 1rem);
  /* outline: 1px solid red; */
}

.flow--space-small {
  --flow-space: 0.75rem;
}

.margin-top {
  margin-top: 1rem;
}

.space-evenly {
  justify-content: space-evenly;
}

.space-between {
  justify-content: space-between;
}

.container {
  padding-inline: 2em;
  margin-inline: auto;
  max-width: 80rem;
}

.border-radius {
  border-radius: 20px;
}

.border-radius-lrg {
  border-radius: 20%;
}

.sticky {
  position: sticky;
  top: 0;
  width: 100%;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; /* added line */
  border: 0;
}

.skip-to-content {
  position: absolute;
  z-index: 9999;
  background: hsl(var(--clr-white));
  color: hsl(var(--clr-dark));
  padding: 0.5em 1em;
  margin-inline: auto;
  transform: translateY(-100%);
  transition: transform 250ms ease-in;
}

.skip-to-content:focus {
  transform: translateY(0);
}

/* Colors */
.bg-dark {
  background-color: var(--clr-dark-grey);
}

.bg-light {
  background-color: var(--clr-light-grey);
}

.bg-white {
  background-color: var(--clr-white);
}

.bg-green {
  background-color: var(--clr-green);
}

.bg-orange {
  background-color: var(--clr-orange);
}

.text-green {
  color: var(--clr-green);
}

.text-orange {
  color: var(--clr-orange);
}

.text-white {
  color: var(--clr-white);
}

.text-dark {
  color: var(--clr-dark-grey);
}

/* Spacing */
.padding-bottom {
  padding-bottom: 1em;
}

/* .border--bottom-green {
  border-bottom: 3px solid var(--clr-green);
} */

.border-green {
  border: 1px solid var(--clr-green);
}

.border-0 {
  border: 0;
}

.align-text-left {
  text-align: left;
}

.align-self-right {
  align-self: flex-end;
}

/* typography */
.lowercase {
  text-transform: lowercase;
}

.fs-lrg {
  font-size: var(--fs-lrg);
}

.fs-med {
  font-size: var(--fs-med);
}

.fs-sm {
  font-size: var(--fs-sm);
}

.fw-400 {
  font-weight: 400;
}

.fw-200 {
  font-weight: 200;
}

/* ----------------------  */
/* Componenets             */
/* ----------------------  */

/* Nav bar */
.primary-navigation {
  --gap: clamp(1.5rem, 5vw, 3.5rem);
  list-style: none;
  padding: 0;
  margin: 0;
  background: var(--clr-light-grey);
  border-bottom: 3px solid var(--clr-green);
}

.primary-navigation a {
  text-decoration: none;
}

.primary-navigation a:hover,
.primary-navigation a:focus {
  color: var(--clr-green);
  transition: color 0.5s ease;
}

.mobile-nav-toggle {
  display: none;
}

@media (max-width: 35rem) {
  .primary-navigation {
    display: none;
    z-index: 1000;
    flex-direction: column;
    /* inset: 0 0 0 30%; */
    /* padding: min(20rem, 15vh) 2rem; */
    margin: 0;
    /* transform: translateY(-100%);
    transition: transform 500ms ease-in-out; */
    padding: 1rem;
  }

  .primary-navigation[data-visible="true"] {
    display: block;
  }

  .mobile-nav-toggle {
    display: block;
    position: absolute;
    z-index: 2000;
    right: 1rem;
    top: 1rem;
    background: transparent;
    background-image: url(./icon-hamburger.svg);
    background-repeat: no-repeat;
    background-position: center;
    width: 1.5rem;
    aspect-ratio: 1;
    border: 0;
    cursor: pointer;
  }

  .mobile-nav-toggle[aria-expanded="true"] {
    background-image: url(./icon-close.svg);
  }
}

@media (min-width: 35em) {
  .primary-navigation {
    padding-inline: clamp(3rem, 7vw, 7rem);
    justify-content: flex-end;
    padding-block: 1em;
  }
}

/* Card */
.card {
  width: 300px;
  background-color: var(--clr-dark-grey);
  border: 3px solid var(--clr-green);
  border-radius: 25px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  margin: 20px;
  padding: 20px;
  text-align: center;
  cursor: pointer;
}

/* Styles for the card image */
.card-img {
  max-width: 100%;
  height: auto;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}

/* Styles for the card title */
.card-title {
  margin-bottom: 10px;
}

/* Styles for the card body */
.card-body {
  padding: 20px;
  text-align: center;
}

/* Styles for the card body content */
.card-content {
  font-size: var(--fs-med);
  margin-bottom: 10px;
}

.card:hover,
.card:focus {
  border-color: var(--clr-orange);
  transition: border-color 0.5s ease;
}

/* Modal */
.modal-overlay {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.75);
  justify-content: center;
  align-items: center;
  z-index: 999;
  margin: 0;
}
.modal {
  background-color: var(--clr-light-grey);
  padding: 20px;
  border-radius: 5px;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
  text-align: center;
}

.modal button {
  cursor: pointer;
}

.modal button:first-child:hover {
  background-color: var(--clr-green);
  transition: background-color 0.5s ease;
}

.close-button {
  padding: 0.5em;
  background-color: inherit;
  border: 0;
  fill: var(--clr-orange);
}

.close-button:hover,
.close-button:focus {
  fill: var(--clr-green);
  transition: fill 1s ease;
}

/* Contact SVG icons */
.icon--contact:hover {
  fill: var(--clr-green);
  transition: fill 0.5s ease;
}

/* ----------------------  */
/* Layout                  */
/* ----------------------  */

.grid-container {
  text-align: center;
  /* border: 5px solid yellow; */
  display: grid;
  place-items: center;
  padding-inline: 1rem;
  padding-bottom: 4rem;
}

@media (min-width: 45em) {
  .grid-container {
    text-align: left;
    column-gap: var(--container-gap, 2rem);
    grid-template-columns: minmax(1rem, 1fr) repeat(2, minmax(0, 30rem)) minmax(
        1rem,
        1fr
      );
  }
}
/* title card */
.grid-container--title {
  grid-template-columns: minmax(1rem, 1fr) repeat(2, minmax(0, 35rem)) minmax(
      1rem,
      1fr
    );
  grid-template-areas:
    ". one one ."
    ". two two .";
  /* width: (95%, 70rem); */
  height: 100vh;
}

.line-1--title {
  grid-area: one;
  align-self: end;
  border: 1px solid red;
  line-height: 1;
}

.line-2--title {
  grid-area: two;
  align-self: start;
  border: 1px solid green;
  line-height: 1;
}

/* about card */
.grid-container--about {
  grid-template-areas:
    "header"
    "content"
    "img"
    "icons";
}

.header--about {
  grid-area: header;
  justify-self: start;
  border: 2px solid blue;
}

.content--about {
  grid-area: content;
  border: 2px solid red;
}

.content--about > p:where(:not(:first-child)) {
  margin-top: 3rem;
  /* outline: 1px solid red; */
}

.img--about {
  grid-area: img;
  border: 2px solid orange;
}

.icon-tray {
  border: 2px solid green;
  grid-area: icons;
  /* flex-direction: column; */
  /* width: 100%;
  align-items: center; */
  flex-wrap: wrap;
}

@media (min-width: 45em) {
  .grid-container--about {
    grid-template-areas:
      ". header header ."
      ". content content ."
      ". img img ."
      ". icons icons .";
  }
}

@media (min-width: 55em) {
  .grid-container--about {
    grid-template-columns:
      minmax(1rem, 1fr) minmax(0, 35rem) minmax(0, 35rem)
      minmax(1rem, 1fr);
    grid-template-areas:
      ". header header ."
      ". content img ."
      ". icons icons .";
  }

  /* .icon-tray {
    flex-direction: row;
  } */
}

/* portfolio card */
.grid-container--portfolio {
  grid-template-areas:
    "header"
    "content"
    "modal";
}

.header--portfolio {
  grid-area: header;
  justify-self: start;
  border: 2px solid blue;
}

.content--portfolio {
  grid-area: content;
  border: 2px solid red;
}

.modal--portfolio {
  grid-area: modal;
  border: 2px solid green;
  /* flex-direction: column;
  width: 100%; */
  flex-wrap: wrap;
}

@media (min-width: 45em) {
  .grid-container--portfolio {
    grid-template-columns: minmax(1rem, 1fr) repeat(2, minmax(0, 35rem)) minmax(
        1rem,
        1fr
      );
    grid-template-areas:
      ". header header ."
      ". content content ."
      ". modal modal .";
  }

  .modal--portfolio {
    flex-direction: row;
  }
}

/* contact card */
.grid-container--contact {
  grid-template-areas:
    "header"
    "content"
    "icons";
}

.header--contact {
  grid-area: header;
  justify-self: start;
  border: 2px solid blue;
}

.content--contact {
  grid-area: content;
  border: 2px solid red;
}

.icons--contact {
  grid-area: icons;
  gap: var(--gap, 2rem);
  margin-top: var(--flow-space, 3rem);
  border: 2px solid green;
}

@media (min-width: 45em) {
  .grid-container--contact {
    grid-template-columns: minmax(1rem, 1fr) repeat(2, minmax(0, 35rem)) minmax(
        1rem,
        1fr
      );
    grid-template-areas:
      ". header header ."
      ". content content ."
      ". icons icons .";
  }
}
